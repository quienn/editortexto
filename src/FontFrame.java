
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JTextArea;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author quien
 */
public class FontFrame extends javax.swing.JFrame {

    String[] fonts
            = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
    DefaultListModel<String> fontModel = new DefaultListModel<>();

    String fontName = "Noto Sans";
    int fontSize = 14;
    int fontStyle = 0;
    JTextArea textArea;

    /**
     * Creates new form FontFrame
     * @param textArea
     */
    public FontFrame(JTextArea textArea) {
        initComponents();
        
        for (String font : fonts) {
            fontModel.addElement(font);
        }
        
        this.textArea = textArea;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fontListScrollPane = new javax.swing.JScrollPane();
        fontList = new javax.swing.JList<>();
        fontStyleScrollPane = new javax.swing.JScrollPane();
        fontSizeList = new javax.swing.JList<>();
        fontSizeScrollPane = new javax.swing.JScrollPane();
        fontStyleList = new javax.swing.JList<>();
        confirmationPanel = new javax.swing.JPanel();
        confirmationSampleScrollPane = new javax.swing.JScrollPane();
        confirmationSampleArea = new javax.swing.JTextArea();
        confirmationSelectButton = new javax.swing.JButton();
        confirmacionCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Selección de Fuente");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        fontList.setBackground(new java.awt.Color(255, 204, 255));
        fontList.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Fuente")));
        fontList.setModel(fontModel);
        fontList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fontList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                fontListValueChanged(evt);
            }
        });
        fontListScrollPane.setViewportView(fontList);

        getContentPane().add(fontListScrollPane, java.awt.BorderLayout.LINE_START);

        fontSizeList.setBackground(new java.awt.Color(255, 204, 204));
        fontSizeList.setBorder(javax.swing.BorderFactory.createTitledBorder("Tamaño"));
        fontSizeList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "6", "8", "10", "12", "14", "18", "24", "38" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        fontSizeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fontSizeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                fontSizeListValueChanged(evt);
            }
        });
        fontStyleScrollPane.setViewportView(fontSizeList);

        getContentPane().add(fontStyleScrollPane, java.awt.BorderLayout.LINE_END);

        fontStyleList.setBackground(new java.awt.Color(255, 204, 255));
        fontStyleList.setBorder(javax.swing.BorderFactory.createTitledBorder("Estilo de Fuente"));
        fontStyleList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Regular", "Negrita", "Itálica", "Negrita Itálica" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        fontStyleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fontSizeScrollPane.setViewportView(fontStyleList);

        getContentPane().add(fontSizeScrollPane, java.awt.BorderLayout.CENTER);

        confirmationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Muestra:"));

        confirmationSampleArea.setEditable(false);
        confirmationSampleArea.setBackground(new java.awt.Color(255, 204, 204));
        confirmationSampleArea.setColumns(20);
        confirmationSampleArea.setRows(5);
        confirmationSampleArea.setText("¡Hola, Mundo!");
        confirmationSampleScrollPane.setViewportView(confirmationSampleArea);

        confirmationPanel.add(confirmationSampleScrollPane);

        confirmationSelectButton.setBackground(new java.awt.Color(204, 204, 255));
        confirmationSelectButton.setText("Aplicar");
        confirmationSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmationSelectButtonActionPerformed(evt);
            }
        });
        confirmationPanel.add(confirmationSelectButton);

        confirmacionCancelButton.setBackground(new java.awt.Color(204, 204, 255));
        confirmacionCancelButton.setText("Cancelar");
        confirmacionCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmacionCancelButtonActionPerformed(evt);
            }
        });
        confirmationPanel.add(confirmacionCancelButton);

        getContentPane().add(confirmationPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmacionCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmacionCancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_confirmacionCancelButtonActionPerformed

    private void fontListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_fontListValueChanged
        if (!evt.getValueIsAdjusting()) {
            fontName = fontList.getSelectedValue();
            confirmationSampleArea.setFont(new Font(fontName, fontStyle, fontSize));
        }
    }//GEN-LAST:event_fontListValueChanged

    private void fontSizeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_fontSizeListValueChanged
        if (!evt.getValueIsAdjusting()) {
            fontName = fontList.getSelectedValue();
            fontSize = Integer.parseInt(fontSizeList.getSelectedValue());
            confirmationSampleArea.setFont(new Font(fontName, fontStyle, fontSize));
        }
    }//GEN-LAST:event_fontSizeListValueChanged

    private void confirmationSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmationSelectButtonActionPerformed
        textArea.setFont(new Font(fontName, fontStyle, fontSize));
        this.setVisible(false);
    }//GEN-LAST:event_confirmationSelectButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FontFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FontFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FontFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FontFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FontFrame(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmacionCancelButton;
    private javax.swing.JPanel confirmationPanel;
    private javax.swing.JTextArea confirmationSampleArea;
    private javax.swing.JScrollPane confirmationSampleScrollPane;
    private javax.swing.JButton confirmationSelectButton;
    private javax.swing.JList<String> fontList;
    private javax.swing.JScrollPane fontListScrollPane;
    private javax.swing.JList<String> fontSizeList;
    private javax.swing.JScrollPane fontSizeScrollPane;
    private javax.swing.JList<String> fontStyleList;
    private javax.swing.JScrollPane fontStyleScrollPane;
    // End of variables declaration//GEN-END:variables
}
